/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Balls;

import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Timer;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author Karol
 */
public class NewJFrame1 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame1
     */
    int GAME_SPEED = 10;
    static final int BOARD_WIDTH = 600;
    static final int BOARD_HIGHT = 400;
    static final int WINDOW_WIDTH = BOARD_WIDTH + 100;
    static final int WINDOW_HIGHT = BOARD_HIGHT + 50;
    
    List<Ball> balls = new ArrayList<>();
    
    JPanel panel = new game(balls);
    
    public NewJFrame1() {
        super("Rysowanie");
        
 
        add(panel);
        setPreferredSize(new Dimension(WINDOW_WIDTH,WINDOW_HIGHT));
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        //setSize(BOARD_WIDTH, BOARD_HIGHT);
        setVisible(true);
        initComponents();
        
        createBalls(10);
        
        //balls.add(new Ball(random.nextInt(BOARD_WIDTH - Ball.r), 30, Color.RED));
        
        Timer timer = new Timer();
        timer.schedule(new Loop(), 0, GAME_SPEED);
    }
    
    private void createBalls(int n)
    {
        while(n != 0)
        {
            Random random = new Random();
            Ball ball = new Ball((double)(random.nextInt(BOARD_WIDTH - 2 * Ball.r) + Ball.r), 
                           (double)(random.nextInt(BOARD_HIGHT - 2*Ball.r) + Ball.r), Color.BLUE);
            int t1 = random.nextInt(10);
            int t2 = random.nextInt(10);
            ball.vectorX = 1.0 + (double)(t1) / 10.0;
            ball.vectorY = 1.0 + (double)(t2) / 10.0;
            balls.add(ball);
            n--;
        }
    }
    
    private class Loop extends java.util.TimerTask 
    {

        @Override
        public void run() {
            
            for(Ball ball : balls)
            {
                move(ball);
            }
            panel.validate();
            panel.repaint();
        }
        
    }
    void move(Ball ball)
    {
        if(ball.x + ball.vectorX + ball.width / 2 > BOARD_WIDTH)
            ball.vectorX *= -1;
        if(ball.x + ball.vectorX - ball.width / 2 < 0)
            ball.vectorX *= -1;
        if(ball.y + ball.vectorY + ball.hight / 2 > BOARD_HIGHT)
            ball.vectorY *= -1;
        if(ball.y + ball.vectorY - ball.hight / 2 < 0)
            ball.vectorY *= -1;
        ball.x += ball.vectorX;
        ball.y += ball.vectorY;
        
        for(Ball ball1 : balls)
        {
            boolean sameHight = false, sameWidth = false;
            if(ball == ball1)
                continue;
            if(ball.x == ball1.x || 
             ((ball.x - ball.r < ball1.x + ball.r) && (ball.x - ball.r > ball1.x - ball.r)) || 
             ((ball.x + ball.r > ball1.x - ball.r) && (ball.x + ball.r < ball1.x + ball.r)))
            
                sameWidth = true;
            if(ball.y == ball1.y || 
             ((ball.y - ball.r < ball1.y + ball.r) && (ball.y - ball.r > ball1.y - ball.r)) || 
             ((ball.y + ball.r > ball1.y - ball.r) && (ball.y + ball.r < ball1.y + ball.r)))
            
                sameHight = true;
            if(sameHight && sameWidth)
                ball.color = Color.GRAY;
        }
        
        
        
    }
    public class Ball
    {
        double x;
        double y;
        double vectorX = 1;
        double vectorY = 1;
        int width = 20;
        int hight = 20;
        public static final int r = 10;
        Color color;
        public Ball(double x, double y, Color color)
        {
            this.x = x;
            this.y = y;
            this.color =  color;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
