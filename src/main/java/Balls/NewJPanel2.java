/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Balls;

import static Balls.NewJFrame1.WINDOW_WIDTH;
import ClientDataBase.PlayersDataBase;
import ClientNetworkEngine.ClientNetworkEngine;
import Player.Coordinates;
import Player.MyPlayer;
import Player.Player;
import Player.PlayerInfo;
import Protocol.MessagePacket;
import Protocol.Packet;
import Protocol.Protocol;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author Karol
 */
public class NewJPanel2 extends javax.swing.JPanel {
    int GAME_SPEED = 1;
    static final int BOARD_WIDTH = 600;
    static final int BOARD_HIGHT = 400;
    static final int WINDOW_WIDTH = BOARD_WIDTH + 100;
    static final int WINDOW_HIGHT = BOARD_HIGHT + 50;
    
    static ClientNetworkEngine clientNetworkEngine = new ClientNetworkEngine("localhost",8000);
    
    PlayersDataBase playersDatabase = new PlayersDataBase();
    //List<Player> balls = new ArrayList<>();
    
    JPanel panel = new game(playersDatabase);
    /**
     * Creates new form NewJPanel2
     */
    public NewJPanel2(ClientNetworkEngine clientNetworkEngine) {
        //initComponents();
        NewJPanel2.clientNetworkEngine = clientNetworkEngine;
        add(panel);
        setPreferredSize(new Dimension(WINDOW_WIDTH,WINDOW_HIGHT));
        //pack();
        //setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        //clientNetworkEngine.LogIn("aaa", "1234");
        //setSize(BOARD_WIDTH, BOARD_HIGHT);
        setVisible(true);
        //initComponents();
        
        //createBalls(5);
        
        //balls.add(new Ball(random.nextInt(BOARD_WIDTH - Ball.r), 30, Color.RED));
        
        Timer timer = new Timer();
        timer.schedule(new Loop(), 0, GAME_SPEED);
    }

    
    
    MyPlayer myPlayer;
    private class Loop extends java.util.TimerTask 
    {

//        @Override
//        public void run() {
        @Override
        public void run() {
            Packet packet;
            
            while((packet = clientNetworkEngine.nextPacket()) != null)
            {

                switch(packet.getPacketType())
                {
                    case MESSAGE_TO_ALL : 
                        MessagePacket message = (MessagePacket)packet.getSubPacket();
                        //jTextArea1.append("[" + playersDatabase.getPlayer(message.getPlayerId()).getNick()
                        //        + "]" + message.getMessage() + "\r\n");
                        break;
                    case PLAYER_LOGIN :

//                            Serializable o = (PlayerInfo)packet.getSubPacket();
//                            //log(o.toString());
//                            PlayerInfo playerInfo;

                        PlayerInfo playerInfo = (PlayerInfo)packet.getSubPacket();
                        playersDatabase.add(playerInfo);
                        //myPlayer = (MyPlayer)packet.getSubPacket();
                        //jTextArea1.append(playerInfo.getNick() + " has been loged" + "\r\n");    
                        break;
                    case SYNC_PLAYER:
                        myPlayer = (MyPlayer)packet.getSubPacket();
                        //balls.add(myPlayer);
                        break;
                    case MOVE_REPLY:
                        Coordinates coordinates = (Coordinates)packet.getSubPacket();
                        myPlayer.setX(coordinates.getX());
                        myPlayer.setY(coordinates.getY());
                        playerInfo = playersDatabase.getPlayer(myPlayer.getId());
                        playerInfo.setX(coordinates.getX());
                        playerInfo.setY(coordinates.getY());
                        
                        break;
                    default:
                        break;                   
                }
            }
            clientNetworkEngine.sendPacket(new Packet(0, Protocol.PacketType.MOVE_REQUEST, new Coordinates(1,1)));
            panel.validate();
            panel.repaint();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
